@page "/Signup"
@using Expenses_tracker.Components.Layout
@layout AuthLayout
@using Expenses_tracker.Services
@inject Expenses_tracker.Services.AuthServices AuthServices

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container-fluid h-100">
    <div class="row h-100">
        <div class="col-md-6 bg-white p-5">
            <div class="finance-section">
                <img src="/chart-with-magnifier.jpg" alt="Finance Chart" class="img-fluid mb-4" />
                <h1 class="display-4 fw-bold text-dark">Track Your Expenses</h1>
                <p class="lead text-muted">
                    Take control of your finances with powerful expense tracking tools.
                </p>
            </div>
        </div>

        <div class="col-md-6 d-flex align-items-center justify-content-center">
            <div class="login-form-container" style="width: 80%; max-width: 400px;">
                <h2 class="mb-4">Create an account</h2>
                <form @onsubmit="HandleSignup">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-person"></i>
                            </span>
                            <input type="text" class="form-control" id="username" placeholder="your username" @bind="Username" />
                        </div>
                        @if (HasAttemptedSubmit && string.IsNullOrEmpty(Username))
                        {
                            <div class="text-danger mt-1">Username is required.</div>
                        }
                    </div>

                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock"></i>
                            </span>
                            <input type="password" class="form-control" id="password" placeholder="password" @bind="Password" />
                        </div>
                        @if (HasAttemptedSubmit && string.IsNullOrEmpty(Password))
                        {
                            <div class="text-danger mt-1">Password is required.</div>
                        }
                    </div>

                    <div class="mb-3">
                        <label for="currencyType" class="form-label">Currency type</label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-currency-exchange"></i>
                            </span>
                            <select class="form-select" id="currencyType" @bind="CurrencyType">
                                <option value="">Select currency type</option>
                                <option value="USD">USD - US Dollar ($)</option>
                                <option value="NRP">NRP - Nepali Rupees (Rs)</option>
                                <option value="EUR">EUR - Euro (€)</option>
                                <option value="GBP">GBP - British Pound (£)</option>
                                <option value="JPY">JPY - Japanese Yen (¥)</option>
                                <option value="INR">INR - Indian Rupee (₹)</option>
                            </select>
                        </div>
                        @if (HasAttemptedSubmit && string.IsNullOrEmpty(CurrencyType))
                        {
                            <div class="text-danger mt-1">Currency type is required.</div>
                        }
                    </div>

                    <button type="submit" class="btn btn-dark w-100 py-2 mb-3">Sign up</button>

                    @if (!string.IsNullOrEmpty(Message))
                    {
                        <p class=" align-content-center mt-3 @(IsSuccess ? "text-success" : "text-danger")">@Message</p>
                    }


                    <div class="text-center">
                        <span>Already have an account? </span>
                        <a href="/" class="text-decoration-none">Sign in</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    private string Username = "";
    private string Password = "";
    private string CurrencyType = "";
    private string Message = "";
    private bool HasAttemptedSubmit = false;
    private bool IsSuccess = false;

    private Func<string, string, string, Task<bool>> Users;

    protected override void OnInitialized()
    {
        Users = AuthServices.RegisterUser;
    }

    private async Task HandleSignup()
    {
        try
        {
            HasAttemptedSubmit = true;
            if (string.IsNullOrEmpty(Username) || string.IsNullOrEmpty(Password) || string.IsNullOrEmpty(CurrencyType))
            {
                Message = "Please fill out all required fields.";
                return;
            }

            var result = await Users(Username, Password, CurrencyType);

            if (result)
            {
                Message = "Registration successful!";
                IsSuccess = true;
                HasAttemptedSubmit = false;
                Username = "";
                Password = "";
                CurrencyType = "";
            }
            else
            {
                IsSuccess = false;
                Message = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            Message = $"An unexpected error occurred: {ex.Message}";
            IsSuccess = false;
        }
    }
}

